{
    "openapi": "3.0.0",
    "info": {
        "title": "Rekaz Simple Drive API",
        "description": "A simple object storage system providing a single interface for multiple storage backends including S3 Compatible Storage, Database, Local File System, and FTP.",
        "contact": {
            "name": "Rekaz Team",
            "email": "admin@rekaz.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://rekaz.test",
            "description": "Local Development Server"
        }
    ],
    "paths": {
        "/api/v1/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "description": "Authenticate user and return access token",
                "operationId": "fb66b153966d9fac2e999136ef0ade67",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "omartaha.tech7@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "device_name": {
                                        "type": "string",
                                        "example": "Web Browser"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "data": {
                                            "properties": {
                                                "access_token": {
                                                    "type": "string",
                                                    "example": "1|abcdef123456..."
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                },
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Omar Taha"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "omartaha.tech7@gmail.com"
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User registration",
                "description": "Register a new user account",
                "operationId": "fb835c97347e657e2a627790c4c5817a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Omar Taha"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "omartaha.tech7@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "device_name": {
                                        "type": "string",
                                        "example": "Web Browser"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Registration successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Registration successful"
                                        },
                                        "data": {
                                            "properties": {
                                                "access_token": {
                                                    "type": "string",
                                                    "example": "1|abcdef123456..."
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                },
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 2
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Omar Taha"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "omartaha.tech7@gmail.com"
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User logout",
                "description": "Logout the authenticated user and revoke their access token",
                "operationId": "307ed0512855922b2280792376bb2095",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Logout successful"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/v1/blobs": {
            "get": {
                "tags": [
                    "Blobs"
                ],
                "summary": "List blobs",
                "description": "Get a paginated list of blobs",
                "operationId": "a4e6cc205d35713484cc273e7ff8fa15",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page (max 100)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 20
                        }
                    },
                    {
                        "name": "mime_type",
                        "in": "query",
                        "description": "Filter by MIME type prefix",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "image/"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of blobs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 20
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "has_more": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Blobs"
                ],
                "summary": "Store a new blob",
                "description": "Store a blob of data using a unique identifier and Base64 encoded content",
                "operationId": "a090f6c3d5e883aa8e3b90116b9c0df8",
                "requestBody": {
                    "description": "JSON object containing blob ID and Base64 encoded data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "data"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "Unique identifier for the blob. Can be UUID, path, or any valid string",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "any_valid_string_or_identifier"
                                    },
                                    "data": {
                                        "description": "Base64 encoded binary data. Must be valid Base64 format and non-empty after decoding",
                                        "type": "string",
                                        "pattern": "^[A-Za-z0-9+\\/]*={0,2}$",
                                        "example": "SGVsbG8gU2ltcGxlIFN0b3JhZ2UgV29ybGQh"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Blob stored successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Blob stored successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "any_valid_string_or_identifier"
                                                },
                                                "size_bytes": {
                                                    "type": "integer",
                                                    "example": 27
                                                },
                                                "mime_type": {
                                                    "type": "string",
                                                    "example": "application/octet-stream"
                                                },
                                                "storage_backend": {
                                                    "type": "string",
                                                    "example": "local"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-22T21:37:55Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error - Invalid Base64 data or missing required fields",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The data field must be valid Base64 encoded data."
                                        },
                                        "errors": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The data field must be valid Base64 encoded data."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Blob ID already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Blob with ID 'any_valid_string_or_identifier' already exists"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/blobs/{id}": {
            "get": {
                "tags": [
                    "Blobs"
                ],
                "summary": "Retrieve a blob by ID",
                "description": "Retrieve blob content or metadata. Use 'metadata_only=1' to get only metadata without content.",
                "operationId": "b71bac06a959accfc72f8114aeb6527d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Blob ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "download",
                        "in": "query",
                        "description": "Set to '1' to download the file directly",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "1"
                        }
                    },
                    {
                        "name": "metadata_only",
                        "in": "query",
                        "description": "Set to '1' to get only metadata without content",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Blob retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "description": "Full blob data with content",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "example": "any_valid_string_or_identifier"
                                                },
                                                "data": {
                                                    "description": "Base64 encoded binary data",
                                                    "type": "string",
                                                    "example": "SGVsbG8gU2ltcGxlIFN0b3JhZ2UgV29ybGQh"
                                                },
                                                "size": {
                                                    "description": "Size in bytes as string",
                                                    "type": "string",
                                                    "example": "27"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-22T21:37:55Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "description": "Metadata only",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "data": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "string",
                                                            "example": "550e8400-e29b-41d4-a716-446655440000"
                                                        },
                                                        "size_bytes": {
                                                            "type": "integer",
                                                            "example": 1024000
                                                        },
                                                        "size_formatted": {
                                                            "type": "string",
                                                            "example": "1.00 MB"
                                                        },
                                                        "mime_type": {
                                                            "type": "string",
                                                            "example": "application/pdf"
                                                        },
                                                        "storage_backend": {
                                                            "type": "string",
                                                            "example": "s3"
                                                        },
                                                        "checksum_md5": {
                                                            "type": "string",
                                                            "example": "5d41402abc4b2a76b9719d911017c592"
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Blob not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Blob not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Blobs"
                ],
                "summary": "Delete a blob",
                "description": "Delete a blob and its associated data",
                "operationId": "731147f1ee62b39ec8f88b0ab806e4ef",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Blob ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Blob deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Blob deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Blob not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Blob not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/v1/blobs/stats": {
            "get": {
                "tags": [
                    "Blobs"
                ],
                "summary": "Get storage statistics",
                "description": "Get storage usage statistics",
                "operationId": "7d7ce16094f91f1ad69c033958100214",
                "responses": {
                    "200": {
                        "description": "Storage statistics",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "total_blobs": {
                                                    "type": "integer",
                                                    "example": 150
                                                },
                                                "total_size_bytes": {
                                                    "type": "integer",
                                                    "example": 1073741824
                                                },
                                                "total_size_formatted": {
                                                    "type": "string",
                                                    "example": "1.00 GB"
                                                },
                                                "by_backend": {
                                                    "type": "object",
                                                    "additionalProperties": [
                                                        {
                                                            "type": "integer",
                                                            "property": "blob_count"
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "property": "total_size"
                                                        }
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "sanctum": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "User authentication operations"
        },
        {
            "name": "Blobs",
            "description": "Blob storage and retrieval operations"
        }
    ]
}